---
- name: Create temp directory for doing work in
  command: mktemp -d /tmp/fluentd-openshift-XXXXXX
  register: mktemp
  changed_when: False
  check_mode: no

- set_fact:
    tempdir: "{{ mktemp.stdout }}"

- name: "Go to Fluentd project"
  command: oc project {{ fluentd_project }}

# Logstash conf.d Configmap
- name: Create temp directory for configs
  file:
    path: '{{ tempdir }}/fluent.conf.d/'
    state: directory
    mode: 0755

- name: List the subdirectories with the actual configs
  local_action: "command ls {{ configs_dir }}"
  register: subdirs

- name: Create configmaps from individual subdirectories with configs
  include: "{{ role_path }}/tasks/upload_configmap.yaml"
  with_items: '{{ subdirs.stdout_lines }}'
  loop_control:
    loop_var: cm_name

# Create generate new certificates
- name: Generate certificates
  include: "{{ role_path }}/tasks/generate_certs.yaml"
  vars:
    generated_certs_dir: '{{ certs_dir }}'
    cert_hostnames: "{{ fluentd_external_name }},{{ fluentd_name }}"
  when: generate_certs is defined

# Create secrets from certs_dir certs
- name: Use certificates
  include: "{{ role_path }}/tasks/upload_certs.yaml"
  when: certs_dir is defined

- name: "Copy fluentd deployment to the remote"
  template:
    src: fluentd-deployment.yaml.j2
    dest: "{{ tempdir }}/fluentd-deployment.yaml"

- name: Set logging-mux service for external communication
  oc_service:
    state: present
    name: "{{ fluentd_name }}"
    namespace: "{{ fluentd_project }}"
    selector:
      app: fluentd
      fluentd-name: "{{ fluentd_name }}"
    labels:
      app: fluentd
      fluentd-name: "{{ fluentd_name }}"
    ports:
    - name: mux-forward
      port: "{{ fluentd_mux_port }}"
    external_ips:
    - "{{ fluentd_external_ip }}"
    kubeconfig: '{{ kubeconfig }}'
  when: fluentd_external_name is defined


- name: "Create fluentd deployment template"
  shell: oc apply -f {{ tempdir }}/fluentd-deployment.yaml -n {{ fluentd_project }}

- name: Cleaning up temp dir
  file: path="{{mktemp.stdout}}" state=absent
  changed_when: False


